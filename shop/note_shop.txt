            一
开发商城：
1、微型框架，提高开发效率
   路径性息的初始化
   数据库类
   参数过滤  GET/POST(递归)
   报错级别  开发状态和上线状态
   Model层
   日志功能：是指把运行的sql语句，错误记录，记录到日志文件里(文件操作)
2、后台栏目管理，无限级分类(递归)
3、商品管理，上传商品+处理商品图片(GD+文件上传)
4、前台用户登陆，登陆、注册、记住用户名(session+cookie)
5、下订单，购物车,订单功能(面向对象+单例模式)
6、在线支付订单

后台
    栏目管理
    商品管理
前台
    主页/栏目页/商品页
    用户登陆
    购物车
    下单
--------------------------------------------------------------------------------------------------------------------------------
            二
读取配置文件：小项目，配置文件往往只放数据库信息，因此被数据库类读到就行了。
              还有包括缓存信息，smarty的目录信息等等，要求能被多个类读到。

linux环境：
/data/log 目录要有可写权限:chmod o+w log
在一次运行php进程的过程中filesize()的结果会被缓存，很多文件信息获取函数的结果都会被缓存，如filemtime()


model 增删改查集中到model, 业务模型
所有的SQL语句都到model中去了

include/ 下的类文件统一为Test.class.php 类名统一为大写的 class Test{}
model/   的model文件统一为AddCateModel.class.php 类名统一为class AddCateModel{}

include/ 目录下的文件中都加入了这一行代码，是为了防止非法访问
defined('ACC') || exit("This file is denied!");

商品添加的问题：
1、字段多的时候，需要逐一从POST里接收数据，比较麻烦。能否自动把$_POST里面合理的字段自动取出来。
合理的字段就是表中的列名对应的字段。
如表中有goods_id, goods_name, goods_desc,则会自动把POST里的这几个字段拿出来
2、CategoryModel里和GoodsModel里都有一个add方法，重复了，如何解决。
   在model父类里，写最基本的增删改查操作,便于重用,
   然后其他model直接继承这个model即可
3、能否对这些字段的合法性也能自动判断。

回收站功能(在回收站模块),将goods数据库表中的字段is_delete置为1
当然回收站的商品可以彻底删除，也可以恢复

Question:为什么商品不直接删除，而是标记删除或逻辑删除
1、破坏了数据的完整性
   比如淘宝上购买商品，并对商品做了评论，如果商品被删除，那评论该如何处理？
2、影响查询的速度(对于大型网站，尤为重要)， 数据在硬盘上是按格式存储[][],
   删除一行，文件产生一个"空洞"，影响索引，进而影响了速度

   所以从这个角度能得出一个道理，所谓的增删改查，就是变化而已。所谓的删除，并不是真正的删除，无非只是
   状态的变化，live状态， ture or false, 状态为true可以显示的看到，状态为false则隐示的展示
   Example:你去银行存500块，银行雇员在你存钱时误操作存了600元，他这个操作已被记录，那他能删除这个记录吗？
   肯定是不能的，历史已经发生，就让这个流水线就会存在，他唯一能做的就是的进行补救措施已弥补他的错误。

   空即是色，色即是空，色乃物也！

   如果偏要删除：应该自下而上删，比如jack有博文3篇，每篇博文还有评论。则应该先删评论，再删博文，然后删jack
   如果直接删除jack,博文与评论无人管理，形成"脏数据"

--------------------------------------------------------------------------------------------------------------------------------
栏目表：
create table category(
     id int auto_increment primary key,
     catename varchar(28) not null default '',
     intro varchar(200) not null default '',
     parent_id int not null default 0)
     engine myisam charset utf8;

商品表：
CREATE TABLE IF NOT EXISTS `goods` (
  `goods_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,   #商品id
  `goods_sn` varchar(60) NOT NULL DEFAULT '',                 #商品唯一、独一无二的序列号
  `cat_id` smallint(5) unsigned NOT NULL DEFAULT '0',         #分类栏目id
  `brand_id` smallint(5) unsigned NOT NULL DEFAULT '0',       #所属的品牌id
  `goods_name` varchar(120) NOT NULL DEFAULT '',              #商品名
  `shop_price` decimal(10,2) unsigned NOT NULL DEFAULT '0.00',  #本店价
  `market_price` decimal(10,2) unsigned NOT NULL DEFAULT '0.00', #市场价
  `goods_number` smallint(5) unsigned NOT NULL DEFAULT '0',        #商品库存量
  `click_count` int(10) unsigned NOT NULL DEFAULT '0',              #点击量
  `goods_weight` decimal(10,3) unsigned NOT NULL DEFAULT '0.000',   #商品重量
  `goods_brief` varchar(255) NOT NULL DEFAULT '',      #商品简短描述
  `goods_desc` text NOT NULL DEFAULT '',                          #商品详细描述
  `goods_thumb` varchar(255) NOT NULL DEFAULT '',      #商品缩略图
  `goods_img` varchar(255) NOT NULL DEFAULT '',        #商品大一点的图片
  `original_img` varchar(255) NOT NULL DEFAULT '',     #商品原始图
  `is_on_sale` tinyint(1) unsigned NOT NULL DEFAULT '1',   #是否销售状态
  `is_delete` tinyint(1) unsigned NOT NULL DEFAULT '0',    #是否删除
  `is_best` tinyint(1) unsigned NOT NULL DEFAULT '0',      #精品 
  `is_new` tinyint(1) unsigned NOT NULL DEFAULT '0',       #新品
  `is_hot` tinyint(1) unsigned NOT NULL DEFAULT '0',       #热销
  `add_time` int(10) unsigned NOT NULL DEFAULT '0',        #添加时间
  `last_update` int(10) unsigned NOT NULL DEFAULT '0',     #最后修改时间
   PRIMARY KEY (`goods_id`),
   UNIQUE KEY `goods_sn`(`goods_sn`)
) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

--------------------------------------------------------------------------------------------------------------------------------

